BPSECMP2 ;BHAM ISC/FCS/DRS - Parse Claim Response ;06/15/2004
 ;;1.0;E CLAIMS MGMT ENGINE;**1**;JUN 2004
 ;Reference to ^PSRX supported by DBIA 1977
 ;Reference to STORESP^IBNCPDP supported by DBIA 4299
 Q
 ; Parameters:
 ;    CLAIMIEN: IEN from BPS Claims
 ;    RESPIEN:  IEN from BPS Response
 ;    EVENT:    This is used by PSO to create specific events (BILL).
 ;    USER:     User who is creating the event.  This is required when EVENT is sent.
IBSEND(CLAIMIEN,RESPIEN,EVENT,USER) ;
 N IBARY,RXIEN,FILLNUM,IND,TRNDX,RELDATE,X,Y,%DT
 N CLAIMNFO,RESPNFO,RXINFO,RFINFO,TRANINFO
 N RESPONSE,RXACT,CLREAS,BILLNUM,DFN,REQCLAIM
 N DIE,DA,DR
 ;
 ; Quit if there is not a Response or Claim IEN
 I '$G(RESPIEN) Q
 I '$G(CLAIMIEN) Q
 ;
 ; Get Claims and Response Data
 D GETS^DIQ("9002313.02",CLAIMIEN,"103;400*;401;402;403;426","","CLAIMNFO")
 D GETS^DIQ("9002313.0301","1,"_RESPIEN,"112;503;509","I","RESPNFO")
 ;
 ; Get the Transaction IEN and Data
 S IND=$S(CLAIMNFO("9002313.02",CLAIMIEN_",","103")="B2":"AER",1:"AE")
 S TRNDX=$O(^BPST(IND,CLAIMIEN,""))
 I TRNDX="" Q
 D GETS^DIQ("9002313.59",TRNDX,"3;13;404;1201","I","TRANINFO")
 ;
 ; Determine Prescription IEN
 S RXIEN=$P(^BPSC(CLAIMIEN,400,1,0),"^",5)
 ;
 ; If Certify Mode is On, don't send to IB
 I $$GET1^DIQ(9002313.59902,"1,"_TRNDX_",","902.22")["MODE ON" Q
 ;
 ; Testing for Certification Only - DLF
 I '$D(^PSRX(RXIEN)) Q
 ;
 ; Store RXACT into a local variable as it is will be used a lot
 S RXACT=TRANINFO("9002313.59",TRNDX_",",1201,"I")
 ;
 ; Setup User data
 ; If event is passed in, the user should be passed in as well
 ; If no Event, but action is Auto-Reversal (AREV) or CMOP (CR*/PC/RL),
 ;     user postmaster (.5)
 ; Else use the user from BPS Transaction
 I EVENT]"" S IBARY("USER")=USER
 E  I ",AREV,CRLB,CRLX,CRLR,PC,RL,"[(","_RXACT_",") S IBARY("USER")=.5
 E  S IBARY("USER")=TRANINFO("9002313.59",TRNDX_",",13,"I")
 ;
 ; Determine Payer Response
 ; Treat Duplicate of Accepted Reversal ("S") as accepted
 S RESPONSE=RESPNFO(9002313.0301,"1,"_RESPIEN_",",112,"I")
 S RESPONSE=$S(RESPONSE="A":"ACCEPTED",RESPONSE="C":"CAPTURED",RESPONSE="D":"DUPLICATE",RESPONSE="P":"PAYABLE",RESPONSE="R":"REJECTED",RESPONSE="S":"ACCEPTED",1:"OTHER")
 ;
 ; Get Prescription Information
 D GETS^DIQ("52",RXIEN,".01;4;6;8;7;16;27","IE","RXINFO")
 ;
 ; Get Refill Info if this is a refill
 S FILLNUM=+$E($P(TRNDX,".",2),1,4)
 I FILLNUM>0 D GETS^DIQ("52.1",FILLNUM_","_RXIEN,".01;1;1.1;11","","RFINFO")
 ;
 ; Fill Date
 S IBARY("FILL DATE")=CLAIMNFO("9002313.0201","1,"_CLAIMIEN_",","401")
 S %DT="X",X=IBARY("FILL DATE") D ^%DT S:Y'=-1 IBARY("FILL DATE")=Y
 ;
 ; Information needed for PAID/BILLING event
 S IBARY("PAID")=0
 I RESPONSE="PAYABLE" D
 . S IBARY("PAID")=$$DFF2EXT^BPSECFM(RESPNFO(9002313.0301,"1,"_RESPIEN_",",509,"I"))
 . S IBARY("AUTH #")=RESPNFO(9002313.0301,"1,"_RESPIEN_",",503,"I")
 . S IBARY("RX NO")=RXINFO(52,RXIEN_",",.01,"E")
 . S IBARY("DRUG")=$P($G(^PSRX(RXIEN,0)),"^",6)
 . I FILLNUM<1  D
 .. S IBARY("DAYS SUPPLY")=RXINFO(52,RXIEN_",",8,"E")
 .. S IBARY("QTY")=RXINFO(52,RXIEN_",",7,"E")
 . E  D
 .. S IBARY("DAYS SUPPLY")=$G(RFINFO(52.1,FILLNUM_","_RXIEN_",",1.1))
 .. S IBARY("QTY")=$G(RFINFO(52.1,FILLNUM_","_RXIEN_",",1))
 ;
 ; Get Plan info
 I $D(^BPST(TRNDX,10,1,0)) S IBARY("PLAN")=$P(^BPST(TRNDX,10,1,0),"^")
 ;
 ; Setup miscellaneous values
 S DFN=$P($G(^PSRX(RXIEN,0)),"^",2)
 S IBARY("NDC")=$$GETNDC^PSONDCUT(RXIEN,FILLNUM)
 S IBARY("FILL NUMBER")=FILLNUM
 S IBARY("FILLED BY")=RXINFO(52,RXIEN_",",16,"I")
 S IBARY("PRESCRIPTION")=RXIEN
 S IBARY("BILLED")=$P(CLAIMNFO("9002313.0201","1,"_CLAIMIEN_",","426"),"DQ",2)
 S IBARY("BILLED")=$$DFF2EXT^BPSECFM(IBARY("BILLED"))
 S IBARY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIMIEN_",","402"),"D2",2)
 S RELDATE=$S(FILLNUM=0:$P($G(^PSRX(RXIEN,2)),"^",13),1:$P($G(^PSRX(RXIEN,1,FILLNUM,0)),"^",18))
 S IBARY("RELEASE DATE")=$P(RELDATE,".")
 S IBARY("RESPONSE")=RESPONSE
 S IBARY("DIVISION")=$$MCDIV^BPSBUTL(RXIEN,FILLNUM)
 ;
 ; For reversals, get reversal reason and check for closed reason
 ; Call IB with Reversal Event
 ; If there is a close reason, call IB with CLOSE event
 ;    and update BPS Claim with close information
 I EVENT="",$$ISREVERS^BPSOSU(CLAIMIEN) D  Q
 . S REQCLAIM=TRANINFO("9002313.59",TRNDX_",",3,"I")
 . S IBARY("REVERSAL REASON")=TRANINFO("9002313.59",TRNDX_",",404,"I")
 . S IBARY("RTS-DEL")=0
 . ; Get RX action, which determine close event
 . I RXACT="RS" S CLREAS="PRESCRIPTION NOT RELEASED",IBARY("RTS-DEL")=1
 . I RXACT="DE" D
 . . S CLREAS="PRESCRIPTION DELETED",IBARY("RTS-DEL")=1
 . . ; check whether RX was in fact deleted in Pharmacy
 . . ; if not then the refill was deleted
 . . I $$RXSTATUS^BPSSCRU2(RXIEN,0)'=13 S IBARY("CLOSE COMMENT")="DELETION OF REFILL ONLY - ORIGINAL RX MAY REMAIN ACTIVE"
 . ; If accepted inpatient autoreversal, then close the claim
 . I RXACT="AREV",RESPONSE="ACCEPTED",REQCLAIM,$P($G(^BPSC(REQCLAIM,0)),U,7)=2 D
 .. S CLREAS="OTHER",IBARY("CLOSE COMMENT")="INPATIENT PRESCRIPTION"
 . I $D(CLREAS) S IBARY("CLOSE REASON")=$O(^IBE(356.8,"B",CLREAS,0))
 . ;
 . ; Call IB for Reversal Event
 . S IBARY("STATUS")="REVERSED",BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
 . ; If there is no close reason, quit
 . I '$D(IBARY("CLOSE REASON")) Q
 . ; Call IB for CLOSE event
 . ;  Note for close, user is always postmaster (.5)
 . S IBARY("STATUS")="CLOSED",IBARY("USER")=.5
 . S BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
 . ;
 . ; Populate the original claim request with the close reason
 . I REQCLAIM D
 .. S DIE="^BPSC(",DA=REQCLAIM
 .. S DR="901///1;902///"_$$NOW^XLFDT()_";903///.5;904///"_IBARY("CLOSE REASON")
 .. D ^DIE
 ; 
 ; If we got here, then it is not a reversal
 ; If EVENT is set, send Submit event
 I EVENT="" S IBARY("STATUS")="SUBMITTED",BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
 ;
 ; Sent Paid (Billable) event is the claim was paid and released or EVENT is BILL
 ;   Note: User is always postmaster except for BackBilling (BB)
 I EVENT="BILL"!(RESPONSE="PAYABLE"&(IBARY("RELEASE DATE")]"")) D
 . I RXACT'="BB" S IBARY("USER")=.5
 . S IBARY("STATUS")="PAID",BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
 Q
 ;
 ; Synch DURs between ECME and PSO
 ; Parameters:
 ;   IEN59 is the BPS Transaction IEN
DURSYNC(IEN59) ;
 N RXIEN,RXFILL
 ;
 ; Check Parameter
 I IEN59="" Q
 ;
 ; Get Prescription and Fill number
 S RXIEN=$$GET1^DIQ(9002313.59,IEN59_",",1.11,"I")
 S RXFILL=$$GET1^DIQ(9002313.59902,"1,"_IEN59_",",902.17,"E")
 I RXIEN=""!(RXFILL="") Q
 ;
 ; Call PSO to sync reject codes
 D SYNC^PSOREJUT(RXIEN,RXFILL,"")
 Q
 ;
PROCOTH ;
 Q:$G(FDATA(TRANSACT,563.01,1))=""
 N NNDX,FILE,ROOT,FDATA3,FLDNUM
 S FILE="9002313.1401"
 S ROOT="FDATA3(9002313.1401)"
 S NNDX=""
 F  S NNDX=$O(FDATA(FDAIEN(TRANSACT),563.01,NNDX)) Q:NNDX=""  D
 .S FLDNUM=".01" D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,563.01,NNDX),ROOT)
 D UPDATE^DIE("S","FDATA3(9002313.1401)")
 Q
PROCDUR ;
 Q:$G(FDATA(TRANSACT,567,1))=""
 N NNDX,FILE,ROOT,FDAT1101,FLDNUM
 S FILE="9002313.1101"
 S ROOT="FDAT1101(9002313.1101)"
 S NNDX=""
 F  S NNDX=$O(FDATA(TRANSACT,567,NNDX)) Q:NNDX=""  D
 .S FLDNUM=".01" D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,567,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,439,NNDX))  D
 ..S FLDNUM="439"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,439,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,528,NNDX))  D
 ..S FLDNUM="528"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,528,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,529,NNDX))  D
 ..S FLDNUM="529"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,529,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,530,NNDX))  D
 ..S FLDNUM="530"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,530,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,531,NNDX))  D
 ..S FLDNUM="531"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,531,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,532,NNDX))  D
 ..S FLDNUM="532"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,532,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,533,NNDX))  D
 ..S FLDNUM="533"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,533,NNDX),ROOT)
 .I $D(FDATA(TRANSACT,544,NNDX)) D
 ..S FLDNUM="544"
 ..D FDA^DILF(FILE,"+"_NNDX_","_FDAIEN03(TRANSACT)_","_FDAIEN(TRANSACT),FLDNUM,"",FDATA(TRANSACT,544,NNDX),ROOT)
 D UPDATE^DIE("S","FDAT1101(9002313.1101)")
 Q
