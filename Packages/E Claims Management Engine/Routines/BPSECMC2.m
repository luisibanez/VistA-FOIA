BPSECMC2 ;BHAM ISC/SAB - ENTER/EDIT OUTPATIENT SITE PARAMETERS ;09/18/92 9:11
 ;;1.0;E CLAIMS MGMT ENGINE;**1**;JUN 2004
 ;
CHOP(HLA,CLAIMIEN,IEN59) ;
 ;
 ;
 N TCNT,CNT,RNLNGTH,TRANID,V2DTG
 S CNT=0
 ;
 ; Crash proofing - Need to put better error handling in
 I '$D(HLA)!'$L($G(CLAIMIEN)) W !,"Error: Invalid Claim Data"
 ;
 ; Initialize HL7 environment
 ;
 D INIT^HLFNC2("BPS ECMECL1 NTE",.HL)
 I $G(HL)  D
 . ; put error handler here for init failure
 . W !,"Error: "_$P(HL,2)
 ;
 ; Determine run length of the transmission & pad with zeroes
 ;
 S RNLNGTH=0
 F TCNT=1:1 Q:$G(HLA("HLS",TCNT))=""  D
 .S RNLNGTH=RNLNGTH+$L(HLA("HLS",TCNT))
 S RNLNGTH=$RE($E($RE("0000"_(RNLNGTH+29)),1,4))
 S CNT=TCNT-1
 ;
 S TRANID=$P($P($G(^BPSC(CLAIMIEN,0)),"^"),"R")
 S HLA("HLS",1)="\X02\"_RNLNGTH_TRANID_$G(HLA("HLS",1))
 ;
 ; Translate non-printable to printable & Set OBX segs
 F TCNT=1:1:CNT Q:$G(HLA("HLS",TCNT))=""  D
 .F  D  Q:$P(HLA("HLS",TCNT),$C(29))=HLA("HLS",TCNT)
 ..S:HLA("HLS",TCNT)[$C(29) HLA("HLS",TCNT)=$P(HLA("HLS",TCNT),$C(29))_"\X1D\"_$P(HLA("HLS",TCNT),$C(29),2,999)
 .F  D  Q:$P(HLA("HLS",TCNT),$C(30))=HLA("HLS",TCNT)
 ..S:HLA("HLS",TCNT)[$C(30) HLA("HLS",TCNT)=$P(HLA("HLS",TCNT),$C(30))_"\X1E\"_$P(HLA("HLS",TCNT),$C(30),2,999)
 .F  D  Q:$P(HLA("HLS",TCNT),$C(28))=HLA("HLS",TCNT)
 ..S:HLA("HLS",TCNT)[$C(28) HLA("HLS",TCNT)=$P(HLA("HLS",TCNT),$C(28))_"\X1C\"_$P(HLA("HLS",TCNT),$C(28),2,999)
 .I TCNT=CNT S HLA("HLS",CNT)=$P(HLA("HLS",CNT),$C(3))_"\X03\"
 .S HLA("HLS",TCNT)="OBX||FT|NCPDP|"_TCNT_"|"_HLA("HLS",TCNT)_"||||||F"
 ;
 ; Set OBR seg
 ; Get fileman date/time, ensuring seconds are included: 3031029.135636
 S V2DTG=$E($$HTFM^XLFDT($H)_"000000",1,14)
 ; Set HL7 Date/Time format: 20031029135636-0400
 S HLA("HLS",.5)="OBR||||NCPDP|||"_$$FMTHL7^XLFDT(V2DTG)_"|||||||||||"_$E(TRANID,1,29)
 ;
 K HLA("HLS",0)
 ;
 ;CALL HL7 TO TRANSMIT SINGLE MESSAGE
 ;
 S IEN59=$O(^BPST("AE",CLAIMIEN,""))
 I IEN59="" S IEN59=$O(^BPST("AER",CLAIMIEN,""))
 D SETSLOT^BPSOSL(IEN59)
 D LOG^BPSOSL($T(+0)_" - CLAIM - BEGIN - #"_CLAIMIEN_" ("_$P($G(^BPSC(CLAIMIEN,0)),U)_")")
 D SETCSTAT^BPSOSU(CLAIMIEN,60)
 ;
 D GENERATE^HLMA("BPS ECMESV1 NTE","LM",1,.MYRESULT,"",.MYOPTNS)
 ;
 D LOG^BPSOSL($T(+0)_" - CLAIM - SENT - #"_CLAIMIEN_" ("_$P($G(^BPSC(CLAIMIEN,0)),U)_")")
 Q
STORESP ;
 ; 
 ; THE HL7 MODULE CALLS THIS ROUTINE FROM THE RESPONSE PROCESSING ROUTINE.  THIS MODULE READS THE
 ; INFORMATION ABOUT THE RESPONSE FROM FILE 772 AND CALLS PSOECMPS4 TO STORE THE RESPONSE INTO 
 ; THE BPS RESPONSE FILE, 9002313.03
 ;
 N RI,TMSG,RMSG,RESPIEN,TRANTYPE,VANUM,CLAIMIEN,IEN59,ABSBRXI
 S TMSG=""
 F RI=1:1 X HLNEXT Q:HLNODE=""  I $E(HLNODE,1,3)="OBX"  D
 .S TMSG=HLNODE,RMSG=""
 .F  S RMSG=$O(HLNODE(RMSG)) Q:RMSG=""  S TMSG=TMSG_HLNODE(RMSG)
 ;
 ;STRIP OFF HL7, STX, ETX, NTE AND BYTE COUNT
 S TMSG=$P(TMSG,$E(TMSG,4),6),TMSG=$E(TMSG,10,$L(TMSG)-5)
 S TRANTYPE=$E(TMSG,32,33),VANUM=$E(TMSG,1,29)
 S CLAIMIEN=$O(^BPSC("B",VANUM,""))
 ; If CLAIMIEN is null, next line will crash ungracefully
 S IEN59=$O(^BPST("AE",CLAIMIEN,""))
 I IEN59="" S IEN59=$O(^BPST("AER",CLAIMIEN,""))
 ;
 D SETSLOT^BPSOSL(IEN59)
 D SETCSTAT^BPSOSU(CLAIMIEN,70)
 ;STORE THE RESPONSE MESSAGE IN THE RESPONSE FILE
 ;
 D LOG^BPSOSL($T(+0)_" - CLAIM - RESPONSE RECEIVED - #"_CLAIMIEN_" ("_$P($G(^BPSC(CLAIMIEN,0)),U)_")")
 D SETCSTAT^BPSOSU(CLAIMIEN,80)
 D PARSE^BPSECMPS(TMSG,CLAIMIEN,.RESPIEN)
 D LOG^BPSOSL($T(+0)_" - CLAIM - RESPONSE STORED - #"_CLAIMIEN_" ("_$P($G(^BPSC(CLAIMIEN,0)),U)_")")
 D LOG^BPSOSL("CLAIM - END - #"_CLAIMIEN_" ("_$P($G(^BPSC(CLAIMIEN,0)),U)_")")
 S ABSBRXI=IEN59
 D ONE^BPSOSQL(CLAIMIEN,$G(RESPIEN))
 Q
